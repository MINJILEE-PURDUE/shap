name: tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - uses: pre-commit/action@v3.0.0

  detectchanges:
    # Detect if the python package has been changed, or else if tests can be skipped.
    # Note: path filters cannot be used to skip the entire workflow, as Status Checks
    # will remain in a "Pending" state. However, if a job within a workflow is skipped
    # due to a conditional, it will report its status as "Success".
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      packagechanged: ${{ steps.filter.outputs.packagechanged }}
    steps:
    - uses: dorny/paths-filter@v2
      if: github.event_name == 'pull_request'
      id: filter
      with:
        filters: |
          packagechanged:
            - 'shap/**'
            - 'shap/**'
            - 'tests/**'
            - 'data/**'
            - 'pyproject.toml'
            - 'setup.py'
            - '.github/workflows/run_tests.yml'

  run_tests:
    needs: detectchanges
    if: ${{ github.event_name != 'pull_request' || needs.detectchanges.outputs.packagechanged == 'true' }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        # The total number of matrix jobs should match codecov.yml `after_n_builds`.
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        extras: ["test"]
        include:
          # Also test on windows/mac, just one job each
          - os: windows-latest
            python-version: "3.11"
            extras: "test"
            name: 3.11-windows
          - os: macos-latest
            python-version: "3.11"
            extras: "test"
            name: 3.11-macos
          # Also run tests with only the core dependencies, to ensure we
          # cover the latest version of numpy/pandas. See dsgibbons#46
          - os: ubuntu-latest
            python-version: "3.11"
            extras: "test-core"
            name: 3.11-core
      fail-fast: false
    # Workaround to matrix job names stay the same match the expected names:
    # "Required Checks" enfore that a check called "run_tests (3.8)" is present
    name: run_tests (${{ matrix.name && matrix.name || matrix.python-version }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache python libs
        uses: actions/cache@v3
        if: matrix.extras == 'test'
        with:
          path: |
            # Only cache a subset of libraries, ensuring cache size remains under 10GB. See dsgibbons#42
            ${{ env.pythonLocation }}/**/site-packages/pyspark*
            ${{ env.pythonLocation }}/**/site-packages/nvidia*
            ${{ env.pythonLocation }}/**/site-packages/torch*
            ${{ env.pythonLocation }}/**/site-packages/functorch*
          key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.pythonLocation }}-${{ hashFiles('setup.py', 'pyproject.toml') }}-0
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Use "eager" update strategy in case cached dependencies are outdated
          # Using regular install NOT editable install: see GH #3020
          pip install --upgrade --upgrade-strategy eager '.[${{ matrix.extras }},plots]'
      - name: Test with pytest
        # Ensure we avoid adding current working directory to sys.path:
        # - Use "pytest" over "python -m pytest"
        # - Use "append" import mode rather than default "prepend"
        run: >
          pytest --durations=20
          --cov --cov-report=xml
          --mpl-generate-summary=html --mpl-results-path=./mpl-results
          --import-mode=append
      - name: Upload mpl test report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: mpl-results-${{ matrix.python-version }}-${{ runner.os }}-${{ matrix.extras }}
          path: mpl-results/
          if-no-files-found: ignore
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
